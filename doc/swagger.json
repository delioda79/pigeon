{
  "openapi": "3.0.0",
  "info": {
    "title": "Pigeon Microservice",
    "description": "Microservice responsible for notifications, at the moment should be contacted only via REST but in the next fases it will allow direct comunication with other microservices. In the current implementation it only sends SMSs via twilio and needs a task ID generated by REST.",
    "version": "0.1.0"
  },
  "paths": {
    "/alive": {
      "get": {
        "tags": [
          "Alive"
        ],
        "summary": "Get the service’s live status",
        "description": "Returns the live status of the Pigeon Microservice",
        "operationId": "getalive",
        "responses": {
          "200": {
            "description": "Healthy response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "ready"
        ],
        "summary": "Get the service’s readyness status",
        "description": "Returns the readyness status of the Pigeon Microservice",
        "operationId": "getready",
        "responses": {
          "200": {
            "description": "Service readyness",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/message/send": {
      "post": {
        "tags": [
          "Send Message"
        ],
        "summary": "Sends a new Message",
        "description": "Sends a new Message",
        "operationId": "sendmessage",
        "requestBody": {
          "description": "Message to send",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Impossible to send the message"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MessageRequest": {
        "properties": {
          "id": {
            "type": "string",
            "example": "as113451"
          },
          "critical": {
            "type": "boolean",
            "example": true
          },
          "recipient":{
            "type": "string",
            "example": "+12345678"
          },
          "content": {
            "type": "string",
            "example": "Hello there"
          }
        }
      },
      "MessageResponse": {
        "properties": {
          "id": {
            "type": "string",
            "example": "as113451"
          },
          "critical": {
            "type": "boolean",
            "example": true
          },
          "recipient":{
            "type": "string",
            "example": "+12345678"
          },
          "content": {
            "type": "string",
            "example": "Hello there"
          },
          "status": {
            "type": "string",
            "example": "delivered"
          },
          "provider_id": {
            "type": "string",
            "example": "aghj123hjhk"
          }
        }
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          }
        },
        "type": "object"
      }
    }
  }
}